name: "Tests sobre fuentes del repo del estudiante"
on:
  pull_request:
    paths:
      - 'proyectos/*.md'

jobs:
  ops-on-pr:
    runs-on: ubuntu-latest
    outputs:
      user: ${{steps.pr_info.outputs.user}}
      repo: ${{steps.pr_info.outputs.repo}}
      file: ${{steps.pr_info.outputs.file}}
    steps:
      - id: pr_info
        name: Comprueba y analiza
        uses: JJ/grading-pr-info-gh-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ops-on-source:
    runs-on: ubuntu-latest
    needs: ops-on-pr
    env:
      user: ${{ needs.ops-on-pr.outputs.user }}
      repo: ${{ needs.ops-on-pr.outputs.repo }}
      file: ${{ needs.ops-on-pr.outputs.file }}
    steps:
      - name: Descarga fuente
        uses: actions/checkout@v2
        with:
          repository: ${{env.user}}/${{env.repo}}
          ref: ${{env.rama}}
      - name: Tests sobre fuentes
        with:
          fase: ${{env.file}}
        uses: JJ/grading-source-tests-gh-action@main
  comprueba_hito_1:
    runs-on: ubuntu-latest
    needs: ops-on-pr
    env:
      user: ${{ needs.ops-on-pr.outputs.user }}
      repo: ${{ needs.ops-on-pr.outputs.repo }}
      file: ${{ needs.ops-on-pr.outputs.file }}
    steps:
      - name: Comprueba hitos en repo estudiante
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
              const user = process.env.user
              const repo = process.env.repo
              console.log( "» Trabajando con el repo " + repo + " para el usuario " + user )
              const milestones = await github.issues.listMilestones( { owner: user, repo: repo } )
              if ( ! milestones.data.length ) {
                  core.setFailed("❌ Tiene que haber por lo menos un milestone")
              }
              const minMilestones = 3
              if ( minMilestones && milestones.data.length < minMilestones ) {
                  core.setFailed( "❌ Tendría que haber más de " + minMilestones + " milestone(s)");
              }
              var totalIssues = 0
              var totalClosedIssues = 0
              milestones.data.forEach( async function( milestone ) {
                  totalIssues += milestone.open_issues + milestone.closed_issues
                  totalClosedIssues += milestone.closed_issues
              })
              console.log( "✅ Hay " + totalIssues + " issues en tus milestones y " + totalClosedIssues + " cerrados ")
              if ( ! totalIssues ) {
                  core.setFailed( "❌ No hay ningún issue en tus milestones")
              } else if ( ! totalClosedIssues ) {
                  core.setFailed( "❌ No hay ningún issue cerrado milestones")
              }
